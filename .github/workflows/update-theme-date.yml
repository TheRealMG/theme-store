name: Update Theme Timestamps

on:
  pull_request:
    types: [closed]
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  update-timestamp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changes
        run: git diff --name-only HEAD^1 HEAD

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # or whichever version you prefer

      # - name: Detect changed files
      #   id: changed-files
      #   run: |
      #     echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
      #     git diff --name-only HEAD^ HEAD >> $GITHUB_ENV
      #     echo "EOF" >> $GITHUB_ENV

      # - name: Update updatedAt property
      #   run: |
      #     theme_file = os.path.join(theme_path, "theme.json")

      #     if not os.path.exists(theme_file):
      #         panic(f"{theme_file} not found.")

      #     # Load the theme JSON data
      #     with open(theme_file, "r") as f:
      #         try:
      #             theme_data = json.load(f)
      #         except json.JSONDecodeError as e:
      #             panic("Error reading theme.json: " + str(e))

      #     # Update the `updatedAt` field to the current date
      #     theme_data["updatedAt"] = time.strftime("%Y-%m-%d")

      #     # Write the changes back to theme.json
      #     with open(theme_file, "w") as f:
      #         json.dump(theme_data, f, indent=4)

      #     print(f"Updated `updatedAt` for {theme_path} to {theme_data['updatedAt']}")

      # - name: Commit changes
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git add path/to/themes/**/*.json  # Adjust if needed
      #     git commit -m "Update updatedAt timestamp on merge" || echo "No changes to commit"

      # - name: Push changes
      #   run: git push origin main
